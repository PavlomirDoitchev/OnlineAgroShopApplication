@using AgroShopApp.Web.ViewModels.Cart
@using static AgroShopApp.GCommon.ApplicationConstants
@using static AgroShopApp.GCommon.AvailableCities
@model ConfirmOrderViewModel

@{
    ViewData["Title"] = "Confirm Order";
}

<h2 class="text-white text-center my-4">Confirm Your Order</h2>

<table class="table table-dark table-striped">
    <thead>
        <tr>
            <th>Product</th>
            <th>Qty</th>
            <th>Unit Price</th>
            <th>Total</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Quantity</td>
                <td>@ToCurrency(item.Price)</td>
                <td>@ToCurrency(item.Total)</td>
            </tr>
        }
    </tbody>
</table>

<div class="text-end mt-4">
    <h5 class="text-light">Total: <span class="fw-bold">@ToCurrency(Model.TotalAmount)</span></h5>
</div>
<form asp-action="PlaceOrder" method="post" class="mt-4 needs-validation" novalidate>
    @Html.AntiForgeryToken()

    <div class="mb-3">
        <label class="form-label text-light" for="SelectedCity">City</label>
        <select class="form-select @(ViewData.ModelState["SelectedCity"]?.Errors.Any() == true ? "is-invalid" : "")"
                id="SelectedCity" name="SelectedCity" required>
            <option value="">Select city...</option>
            @foreach (var city in Cities)
            {
                if (Model.SelectedCity == city)
                {
                    <option value="@city" selected>@city</option>
                }
                else
                {
                    <option value="@city">@city</option>
                }
            }
        </select>
        @Html.ValidationMessageFor(m => m.SelectedCity, "", new { @class = "invalid-feedback" })
    </div>

    <div class="mb-3">
        <label class="form-label text-light" for="StreetAddress">Street Address</label>
        <input type="text"
               class="form-control @(ViewData.ModelState["StreetAddress"]?.Errors.Any() == true ? "is-invalid" : "")"
               id="StreetAddress"
               name="StreetAddress"
               value="@Model.StreetAddress"
               required
               placeholder="e.g. ul. Ivan Vazov 10" />
        @Html.ValidationMessageFor(m => m.StreetAddress, "", new { @class = "invalid-feedback" })
    </div>

    <div class="text-end">
        <button type="submit" class="btn btn-success px-5 py-2 fw-bold rounded-pill">
            <i class="bi bi-check-circle"></i> Confirm Order
        </button>
    </div>
</form>
@section Scripts {

    <script src="~/js/form-validation.js" asp-append-version="true"></script>

}
