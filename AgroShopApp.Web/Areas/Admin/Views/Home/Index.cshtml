@using AgroShopApp.Web.ViewModels
@using static AgroShopApp.GCommon.ApplicationConstants
@model AdminDashboardViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
    var now = DateTime.Now;
}

<h2 class="text-light">Welcome back, Admin!</h2>
<p class="text-light mb-4">Current time: <strong id="clock"></strong></p>

<div class="row text-light mt-4 g-4">
    <div class="col-md-3">
        <div class="card bg-dark border-light shadow-sm text-center p-3">
            <h4 class="text-success">@Model.TotalProducts</h4>
            <p class="text-muted mb-0">Total Products</p>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark border-light shadow-sm text-center p-3">
            <h4 class="text-info">@Model.OrdersToday</h4>
            <p class="text-muted mb-0">Orders Today</p>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark border-light shadow-sm text-center p-3">
            <h4 class="text-warning">@Model.LowStock</h4>
            <p class="text-muted mb-0">Low Stock Items</p>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark border-light shadow-sm text-center p-3">
            <h4 class="text-danger">@Model.OutOfStock</h4>
            <p class="text-muted mb-0">Out of Stock</p>
        </div>
    </div>
</div>
<h4 class="text-light mt-5 mb-3">Recent Orders</h4>

@if (Model.TodaysOrders.Any())
{
    <div class="table-responsive bg-dark rounded shadow-sm">
        <table class="table table text-light mb-0">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Email</th>
                    <th>Time</th>
                    <th>Status</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.TodaysOrders)
                {
                    <tr>
                        <td>@order.Id.ToString().Substring(0, 8)...</td>
                        <td>@order.Email</td>
                        <td>@order.OrderedOn.ToString(HoursFormat)</td>
                        <td>@order.Status</td>
                        <td>@ToCurrency(order.TotalAmount)</td>
                        <td>
                            <a asp-area="Admin" asp-controller="Orders" asp-action="Details" asp-route-id="@order.Id"
                               class="btn btn-sm btn-outline-info rounded-pill">
                                <i class="bi bi-eye"></i> View
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info text-dark">No orders were placed today.</div>
}

<div>
    <h3 class="text-light mt-5 mb-3">Orders Overview</h3>
   
    <canvas id="ordersChart" height="120"></canvas>
    <h4 class="text-light mt-5 mb-3">Revenue Overview</h4>
    <canvas id="revenueChart" height="120"></canvas>

    <h4 class="text-light mt-5 mb-3">Top-Selling Products</h4>
    <canvas id="bestSellersChart" height="120"></canvas>
</div>

@section Scripts {
    <script type="module">
        import { renderDashboardCharts } from '/js/admin/dashboard-charts.js';
        import { startLiveClock } from '/js/admin/live-clock.js';

        const chartData = {
            orders: {
                labels: @Html.Raw(Json.Serialize(Model.OrdersLast7Days.Select(d => d.DateLabel))),
                data: @Html.Raw(Json.Serialize(Model.OrdersLast7Days.Select(d => d.Count)))
            },
            revenue: {
                labels: @Html.Raw(Json.Serialize(Model.RevenueLast7Days.Select(d => d.DateLabel))),
                data: @Html.Raw(Json.Serialize(Model.RevenueLast7Days.Select(d => d.Revenue)))
            },
            bestSellers: {
                labels: @Html.Raw(Json.Serialize(Model.TopSellingProducts.Select(p => p.ProductName))),
                data: @Html.Raw(Json.Serialize(Model.TopSellingProducts.Select(p => p.QuantitySold)))
            }
        };

        renderDashboardCharts(chartData);
        startLiveClock(); // updates #clock
    </script>
}