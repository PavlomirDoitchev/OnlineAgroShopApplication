@using AgroShopApp.Web.ViewModels
@model PaginatedUserListViewModel

@{
    ViewData["Title"] = "Manage Users";
    var filter = ViewBag.Filter as UserFilterInputModel ?? new UserFilterInputModel();
}

<h2 class="text-center text-light mb-4">Users</h2>

<form asp-action="Index" method="get" class="row g-3 mb-4 bg-dark p-3 rounded">
    <div class="col-md-4">
        <input name="Email" value="@filter.Email" placeholder="Search by email..." class="form-control" />
    </div>
    <div class="col-md-3">
        <select name="IsDeleted" class="form-select">
            <option value="" selected="@(filter.IsDeleted == null)">All</option>
            <option value="false" selected="@(filter.IsDeleted == false)">Active</option>
            <option value="true" selected="@(filter.IsDeleted == true)">Deleted</option>
        </select>
    </div>
    <div class="col-md-3 d-flex align-items-center">
        <button class="btn btn-outline-light me-2" type="submit">Filter</button>
        <a asp-action="Index" class="btn btn-outline-secondary">Reset</a>
    </div>
</form>

@if (!Model.Users.Any())
{
    <div class="alert alert-info text-light">No users found.</div>
}
else
{
    <table class="table table-bordered text-light bg-dark shadow-sm rounded">
        <thead>
            <tr>
                <th>Email</th>
                <th>Name</th>
                <th>Status</th>
                <th class="text-end">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>@user.Email</td>
                    <td>@user.FirstName @user.LastName</td>
                    <td>
                        @if (user.IsDeleted)
                        {
                            <span class="badge bg-danger">Deleted</span>
                        }
                        else
                        {
                            <span class="badge bg-success">Active</span>
                        }
                    </td>
                    <td class="text-end">


                        @if (!user.IsDeleted)
                        {
                            <button class="btn btn-sm btn-outline-danger rounded-pill" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal-@user.Id">
                                <i class="bi bi-person-x"></i> Delete
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-sm btn-outline-success rounded-pill" data-bs-toggle="modal" data-bs-target="#confirmRestoreModal-@user.Id">
                                <i class="bi bi-arrow-clockwise"></i> Restore
                            </button>
                        }
                    </td>
                </tr>

                <div class="modal fade" id="confirmDeleteModal-@user.Id" tabindex="-1" aria-labelledby="confirmDeleteLabel-@user.Id" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content bg-dark text-white">
                            <div class="modal-header border-0">
                                <h5 class="modal-title" id="confirmDeleteLabel-@user.Id">Confirm Deletion</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete <strong>@user.Email</strong>?
                            </div>
                            <div class="modal-footer border-0">
                                <form asp-action="Delete" asp-route-id="@user.Id" method="post">
                                @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-danger rounded-pill px-4">Delete</button>
                                </form>
                                <button type="button" class="btn btn-outline-light rounded-pill" data-bs-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="confirmRestoreModal-@user.Id" tabindex="-1" aria-labelledby="confirmRestoreLabel-@user.Id" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content bg-dark text-white">
                            <div class="modal-header border-0">
                                <h5 class="modal-title" id="confirmRestoreLabel-@user.Id">Confirm Restoration</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Restore access for <strong>@user.Email</strong>?
                            </div>
                            <div class="modal-footer border-0">
                                <form asp-action="Restore" asp-route-id="@user.Id" method="post">
                                @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-success rounded-pill px-4">Restore</button>
                                </form>
                                <button type="button" class="btn btn-outline-light rounded-pill" data-bs-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </tbody>
    </table>

    @if (Model.TotalPages > 1)
    {
        @if (Model.TotalPages > 1)
        {
            var prevPage = Model.CurrentPage - 1;
            var nextPage = Model.CurrentPage + 1;
            var startPage = Math.Max(1, Model.CurrentPage - 1);
            var endPage = Math.Min(Model.TotalPages, startPage + 2);

            if (endPage - startPage < 2 && startPage > 1)
            {
                startPage = Math.Max(1, endPage - 2);
            }

            <nav class="mt-4 d-flex justify-content-center flex-wrap">
                <a asp-action="Index"
                   asp-route-page="1"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-Email="@filter.Email"
                   asp-route-IsDeleted="@filter.IsDeleted"
                   class="btn btn-outline-light mx-1 @(Model.CurrentPage == 1 ? "disabled" : "")">
                    First
                </a>

                <a asp-action="Index"
                   asp-route-page="@prevPage"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-Email="@filter.Email"
                   asp-route-IsDeleted="@filter.IsDeleted"
                   class="btn btn-outline-light mx-1 @(Model.CurrentPage == 1 ? "disabled" : "")">
                    &laquo;
                </a>

                @for (int i = startPage; i <= endPage; i++)
                {
                    <a asp-action="Index"
                       asp-route-page="@i"
                       asp-route-pageSize="@Model.PageSize"
                       asp-route-Email="@filter.Email"
                       asp-route-IsDeleted="@filter.IsDeleted"
                       class="btn @(i == Model.CurrentPage ? "btn-primary fw-bold" : "btn-outline-light") mx-1">
                        @i
                    </a>
                }

                <a asp-action="Index"
                   asp-route-page="@nextPage"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-Email="@filter.Email"
                   asp-route-IsDeleted="@filter.IsDeleted"
                   class="btn btn-outline-light mx-1 @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    &raquo;
                </a>

                <a asp-action="Index"
                   asp-route-page="@Model.TotalPages"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-Email="@filter.Email"
                   asp-route-IsDeleted="@filter.IsDeleted"
                   class="btn btn-outline-light mx-1 @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    Last
                </a>
            </nav>
        }

    }
}


